"""
Django settings for seyalan project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta
from dotenv import dotenv_values
import django_heroku
import dj_database_url

env = dotenv_values(".env")
print(env)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f=8$zmq+^rkg6#27s@f--o%qee%#!47gqr06^+c=*u!w0%#kxh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['seyalan.com','.seyalan.com']
BASE_DOMAIN='seyalan.com'

SITE_ID=1
#user model
AUTH_USER_MODEL = 'accounts.User'

# Application definition

INSTALLED_APPS = [
     'django_tenants',
    "sslserver",
     'sequences',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'tenantHandler',
    'knox',
    'django.contrib.sites',
    'django_s3_storage',
    'guardian',
    'accounts',
    'licenses',
    'api',
    'userVerification',
    'workmachine',
    'profile_and_permission',
    'tenant_user_handle',
    'kanbanview'
]

MIDDLEWARE = [
    'django_tenants.middleware.main.TenantMainMiddleware',
    # 'tenantHandler.tenantMiddleware.XHeaderTenantMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'orgMiddleWare.userMiddleware.AuthenticationMiddleware',
    #  'orgMiddleWare.middleware.ThreadLocalUserMiddleware'
]

SHARED_APPS = (
     'django_tenants', # mandatory, should always be before any django app
     "sslserver",
     'sequences',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     'whitenoise.runserver_nostatic',
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
    'tenantHandler',
    'knox',
    'django.contrib.sites',
    'django_s3_storage',
    'guardian',
    'accounts',
    'api',
    'userVerification',
    'licenses'
)
TENANT_APPS = (
    'django.contrib.contenttypes',
    'workmachine',
    'tenant_user_handle',
    'profile_and_permission',
    'tenant_user_handle',
    'kanbanview'
)

#DEFAULT_FILE_STORAGE="tenant_schemas.storage.TenantFileSystemStorage"

TENANT_MODEL = "accounts.Org" # app.Model
ROOT_URLCONF = 'seyalan.urls'
TENANT_DOMAIN_MODEL = "accounts.Domain" 
CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = (
  'http://seyalan.com:8000',
  'http://seyalan.com',
  'https://seyalan.com'
)

# CACHES = {
#     "default": {
#         'KEY_FUNCTION': 'tenant_schemas.cache.make_key',
#         'REVERSE_KEY_FUNCTION': 'tenant_schemas.cache.reverse_key',
#     },
# }


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'client/build'),os.path.join(BASE_DIR,'emailTemplates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'seyalan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',
        'NAME': 'seyalan',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'POST': '',
    }
}

#db_from_env = dj_database_url.config(conn_max_age=600)
#DATABASES['default'].update(db_from_env)
DATABASE_ROUTERS = (
   'django_tenants.routers.TenantSyncRouter',
)

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('knox.auth.TokenAuthentication',),
     'DEFAULT_PERMISSION_CLASSES': [
        'tenant_user_handle.permissions.TentantPermission',
    ]
}


REST_KNOX = {
  'SECURE_HASH_ALGORITHM': 'cryptography.hazmat.primitives.hashes.SHA512',
  'AUTH_TOKEN_CHARACTER_LENGTH': 64,
  'TOKEN_TTL': timedelta(hours=1),
  'USER_SERIALIZER': 'knox.serializers.UserSerializer',
  'TOKEN_LIMIT_PER_USER': None,
  'AUTO_REFRESH': True,
  'MIN_REFRESH_INTERVAL':600,
  'AUTH_HEADER_PREFIX':'Token'
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', # this is default
    'guardian.backends.ObjectPermissionBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

 #static configurations
STATIC_URL = '/static/'
STATIC_ROOT =os.path.join(BASE_DIR, 'client','build', 'static')
# STATICFILES_DIRS = [
#     # os.path.join(BASE_DIR, 'dev_static'),
#     os.path.join(BASE_DIR, 'client','build','static'),
# ]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env['EMAIL_HOST']
EMAIL_USE_TLS = True
EMAIL_PORT = env['EMAIL_PORT']
EMAIL_HOST_USER = env['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = env['EMAIL_HOST_PASSWORD']


#for authentication emails
EMAIL_SERVER = env['EMAIL_HOST']
EMAIL_ADDRESS = env['EMAIL_HOST_USER']
EMAIL_PASSWORD = env['EMAIL_HOST_PASSWORD']
EMAIL_MAIL_SUBJECT = 'Confirm your email'
EMAIL_MAIL_HTML ="verificationEmail.html"
EMAIL_PAGE_TEMPLATE="verificationResponse.html"
USER_VERIFICATION_HTML_TEMPLATE={'U_V': "verificationEmail.html",'P_R':"passwordReset.html"}
EMAIL_USER_VERIFICATION_LINK = env['HOST_URL']+'/verify/'
EMAIL_MODEL_ADMIN = False # the default value is False

django_heroku.settings(locals(),staticfiles=False)